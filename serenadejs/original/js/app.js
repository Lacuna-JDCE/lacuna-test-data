// Generated by CoffeeScript 1.6.3
(function() {___jdce_logger("/js/app.js", 0);
  var App, AppController, Todo, TodoController, app, router, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) {___jdce_logger("/js/app.js", 1); for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() {___jdce_logger("/js/app.js", 2); this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Todo = (function(_super) {___jdce_logger("/js/app.js", 3);
    __extends(Todo, _super);

    function Todo() {___jdce_logger("/js/app.js", 4);
      _ref = Todo.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Todo.belongsTo('app', {
      inverseOf: 'all',
      as: function() {___jdce_logger("/js/app.js", 5);
        return App;
      }
    });

    Todo.property('title', {
      serialize: true
    });

    Todo.property('completed', {
      serialize: true
    });

    Todo.property('incomplete', {
      get: function() {___jdce_logger("/js/app.js", 6);
        return !this.completed;
      }
    });

    Todo.property('edit');

    Todo.prototype.remove = function() {___jdce_logger("/js/app.js", 7);
      return this.app.all["delete"](this);
    };

    return Todo;

  })(Serenade.Model);

  App = (function(_super) {___jdce_logger("/js/app.js", 8);
    __extends(App, _super);

    function App() {___jdce_logger("/js/app.js", 9);
      _ref1 = App.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    App.hasMany('all', {
      inverseOf: 'app',
      serialize: true,
      as: function() {___jdce_logger("/js/app.js", 10);
        return Todo;
      }
    });

    App.selection('active', {
      from: 'all',
      filter: 'incomplete'
    });

    App.selection('completed', {
      from: 'all',
      filter: 'completed'
    });

    App.property('label', {
      get: function() {___jdce_logger("/js/app.js", 11);
        if (this.activeCount === 1) {
          return 'item left';
        } else {
          return 'items left';
        }
      }
    });

    App.property('allCompleted', {
      get: function() {___jdce_logger("/js/app.js", 12);
        return this.activeCount === 0;
      },
      set: function(value) {___jdce_logger("/js/app.js", 13);
        var todo, _i, _len, _ref2, _results;
        _ref2 = this.all;
        _results = [];
        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
          todo = _ref2[_i];
          _results.push(todo.completed = value);
        }
        return _results;
      }
    });

    App.property('newTitle');

    App.property('filter', {
      value: 'all'
    });

    App.property('filtered', {
      get: function() {___jdce_logger("/js/app.js", 14);
        return this[this.filter];
      }
    });

    App.property('filterAll', {
      get: function() {___jdce_logger("/js/app.js", 15);
        return this.filter === 'all';
      }
    });

    App.property('filterActive', {
      get: function() {___jdce_logger("/js/app.js", 16);
        return this.filter === 'active';
      }
    });

    App.property('filterCompleted', {
      get: function() {___jdce_logger("/js/app.js", 17);
        return this.filter === 'completed';
      }
    });

    return App;

  })(Serenade.Model);

  AppController = (function() {___jdce_logger("/js/app.js", 18);
    function AppController(app) {___jdce_logger("/js/app.js", 19);
      this.app = app;
    }

    AppController.prototype.newTodo = function() {___jdce_logger("/js/app.js", 20);
      var title;
      title = this.app.newTitle.trim();
      if (title) {
        this.app.all.push({
          title: title
        });
      }
      return this.app.newTitle = '';
    };

    AppController.prototype.clearCompleted = function() {___jdce_logger("/js/app.js", 21);
      return this.app.all = this.app.active;
    };

    return AppController;

  })();

  TodoController = (function() {___jdce_logger("/js/app.js", 22);
    function TodoController(todo) {___jdce_logger("/js/app.js", 23);
      this.todo = todo;
    }

    TodoController.prototype.removeTodo = function() {___jdce_logger("/js/app.js", 24);
      return this.todo.remove();
    };

    TodoController.prototype.edit = function() {___jdce_logger("/js/app.js", 25);
      this.todo.edit = true;
      return this.field.select();
    };

    TodoController.prototype.edited = function() {___jdce_logger("/js/app.js", 26);
      if (this.todo.title.trim()) {
        this.todo.title = this.todo.title.trim();
        if (this.todo.edit) {
          this.todo.edit = false;
        }
      } else {
        this.todo.remove();
      }
      return this.todo.app.changed.trigger();
    };

    TodoController.prototype.loadField = function(field) {___jdce_logger("/js/app.js", 27);
      this.field = field;
    };

    return TodoController;

  })();

  app = new App(JSON.parse(localStorage.getItem('todos-serenade')));

  app.changed.bind(function() {___jdce_logger("/js/app.js", 28);
    return localStorage.setItem('todos-serenade', app);
  });

  router = Router({
    '/': function() {___jdce_logger("/js/app.js", 29);
      return app.filter = 'all';
    },
    '/active': function() {___jdce_logger("/js/app.js", 30);
      return app.filter = 'active';
    },
    '/completed': function() {___jdce_logger("/js/app.js", 31);
      return app.filter = 'completed';
    }
  });

  router.init();

  Serenade.view('app', document.getElementById('app').innerHTML);

  Serenade.view('todo', document.getElementById('todo').innerHTML);

  Serenade.controller('app', AppController);

  Serenade.controller('todo', TodoController);

  document.body.insertBefore(Serenade.render('app', app), document.body.children[0]);

}).call(this);
